
--What happends when you initialize a repository? Why do you need to do it?
Git adds a folder called .git in order to start keeping track of all changes. otherwise It could be take it as a regular folder.

run git reset lesson_2_reflections.txt and the file will be removed from the staging area, but it will still be in your working directory.

git diff  compare working directory with staging area
git diff --staged  compare staging area with repository
git reset --hard discard any changes in the working directory and staggin area

--How can you use the staging area to make sure you have one commit per logical chance?
in order to avoid commiting little pieces of the changes you can commit to the staging area and when it is fully implementned commit the solution
in one single 

git branch //shows how many branches you have
git branch "name_branch" //creates a new branch
git checkout name_branch //moves you to the branch


What are some situations when branches would be helpfull in keeping your history
organized? how would branches help?
will be organized if I only work in a branch instead of the master when every
team member could commit changes. 

git log --graph --oneline master coins
it gives you a visual representation of the commit history is 

How do the diagrams help you visualize the branch structure?
it shows you the big picture of the repository, to identify where you are and
what features were added since then.

git merge master coins  //merge master coins
 git merge --abort


 git branch -d coins //delete a branch


 What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
 Only one branch containing fixes, to clarify the solution and making it readable



 What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
pros: save time
cons: may lead to conflics
conns manually: a lot of time